--- ./inspect.py	2020-03-13 14:14:13.130696552 +0100
+++ ./inspect.py	2020-03-13 14:14:42.630696541 +0100
@@ -1136,6 +1136,7 @@
     varkw = None
     posonlyargs = []
     kwonlyargs = []
+    defaults = ()
     annotations = {}
     defaults = ()
     kwdefaults = {}
@@ -2602,7 +2603,7 @@
 
     Has the following public attributes:
 
-    * arguments : dict
+    * arguments : OrderedDict
         An ordered mutable mapping of parameters' names to arguments' values.
         Does not contain arguments' default values.
     * signature : Signature
@@ -2702,7 +2703,7 @@
                     # Signature.bind_partial().
                     continue
                 new_arguments.append((name, val))
-        self.arguments = dict(new_arguments)
+        self.arguments = OrderedDict(new_arguments)
 
     def __eq__(self, other):
         if self is other:
@@ -2733,7 +2734,7 @@
 
     A Signature object has the following public attributes and methods:
 
-    * parameters : dict
+    * parameters : OrderedDict
         An ordered mapping of parameters' names to the corresponding
         Parameter objects (keyword-only arguments are in the same order
         as listed in `code.co_varnames`).
@@ -2763,14 +2764,14 @@
         """
 
         if parameters is None:
-            params = {}
+            params = OrderedDict()
         else:
             if __validate_parameters__:
-                params = {}
+                params = OrderedDict()
                 top_kind = _POSITIONAL_ONLY
                 kind_defaults = False
 
-                for param in parameters:
+                for idx, param in enumerate(parameters):
                     kind = param.kind
                     name = param.name
 
@@ -2805,7 +2806,8 @@
 
                     params[name] = param
             else:
-                params = {param.name: param for param in parameters}
+                params = OrderedDict(((param.name, param)
+                                                for param in parameters))
 
         self._parameters = types.MappingProxyType(params)
         self._return_annotation = return_annotation
@@ -2887,7 +2889,7 @@
     def _bind(self, args, kwargs, *, partial=False):
         """Private method. Don't use directly."""
 
-        arguments = {}
+        arguments = OrderedDict()
 
         parameters = iter(self.parameters.values())
         parameters_ex = ()
